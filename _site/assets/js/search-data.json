{"0": {
    "doc": "Publications",
    "title": "Publications",
    "content": "This publication list includes peer-reviewed journal articles, conference proceedings, and preprints in theoretical computer science and mathematics. My research focuses on discrete mathematics and theoretical computer science, particularly random graph theory, consensus dynamics, and computational complexity theory. ",
    "url": "/mypapers/",
    
    "relUrl": "/"
  },"1": {
    "doc": "Publications",
    "title": "Journal Articles (Peer-Reviewed)",
    "content": ". | How Many Vertices Does a Random Walk Miss in a Network with a Moderately Increasing Number of Vertices? Shuji Kijima, Nobutaka Shimizu, and Takeharu Shiraga MATHEMATICS OF OPERATIONS RESEARCH, 2025 DOI: 10.1287/moor.2023.0060 | arXiv (2021) | Slides Preliminary version appeared in SODA2021 Random Walks . | Quasi-majority Functional Voting on Expander Graphs Nobutaka Shimizu and Takeharu Shiraga Random Structures &amp; Algorithms, 65(4), pp.613-643, 2024 DOI: 10.1002/rsa.21224 | arXiv (2022) | Slides Preliminary version appeared in ICALP2020 Graph Theory Consensus Dynamics Stochastic Processes . | Reversible Random Walks on Dynamic Graphs Nobutaka Shimizu and Takeharu Shiraga Random Structures &amp; Algorithms, 63(4), pp.1100-1136, 2023 DOI: 10.1002/rsa.21164 | arXiv (2022) Graph Theory Random Walks . | Phase Transitions of Best-of-Two and Best-of-Three on Stochastic Block Models Nobutaka Shimizu and Takeharu Shiraga Random Structures &amp; Algorithms, 59(1), pp.96-140, 2021 DOI: 10.1002/rsa.20992 | Preliminary version appeared in DISC2019 | Slides Graph Theory Consensus Dynamics Stochastic Processes . | The average distance and the diameter of dense random regular graphs Nobutaka Shimizu The Electronic Journal of Combinatorics, 27(3), 2020 DOI: 10.37236/9809 Preliminary version appeared in SODA2018 Graph Theory Random Graphs . | . ",
    "url": "/mypapers/#journal-articles-peer-reviewed",
    
    "relUrl": "/#journal-articles-peer-reviewed"
  },"2": {
    "doc": "Publications",
    "title": "Conference Proceedings (Peer-Reviewed)",
    "content": ". | 3-Majority and 2-Choices with Many Opinions Nobutaka Shimizu, Takeharu Shiraga Symposium on Principles of Distributed Computing (PODC 2025) arXiv:2503.02426 Graph Theory Consensus Dynamics Stochastic Processes . | An Optimal Error-Correcting Reduction for Matrix Multiplication Shuichi Hirahara, Nobutaka Shimizu International Colloquium on Automata, Languages, and Programming (ICALP 2025) Theoretical CS Computational Complexity . | Error-Correction of Matrix Multiplication Algorithms Shuichi Hirahara, Nobutaka Shimizu Symposium on Theory of Computing (STOC 2025) ECCC TR24-026 Theoretical CS Computational Complexity . | Asynchronous 3-Majority Dynamics with Many Opinions Colin Cooper, Frederik Mallmann-Trenn, Tomasz Radzik, Nobutaka Shimizu, Takeharu Shiraga Symposium on Discrete Algorithms (SODA 2025) DOI: 10.1137/1.9781611978322.140 | arXiv:2503.02426 | Slides Graph Theory Consensus Dynamics Stochastic Processes . | Planted Clique Conjectures Are Equivalent Shuichi Hirahara, Nobutaka Shimizu Symposium on Theory of Computing (STOC 2024) DOI: 10.1145/3618260.3649751 | ECCC TR24-058 | Slides Theoretical CS Computational Complexity Graph Theory . | Hardness Self-Amplification: Simplified, Optimized, and Unified Shuichi Hirahara, Nobutaka Shimizu Symposium on Theory of Computing (STOC 2023) DOI: 10.1145/3564246.3585189 | ECCC TR23-026 | Slides Theoretical CS Computational Complexity . | Hardness Self-Amplification from Feasible Hard-Core Sets Shuichi Hirahara, Nobutaka Shimizu Foundations of Computer Science (FOCS 2022) DOI: 10.1109/FOCS54457.2022.00083 | ECCC TR22-108 | Slides Theoretical CS Computational Complexity . | Nearly Optimal Average-Case Complexity of Counting Bicliques Under SETH Shuichi Hirahara, Nobutaka Shimizu Symposium on Discrete Algorithms (SODA 2021) DOI: 10.1137/1.9781611976465.140 | arXiv:2010.05822 | Slides Theoretical CS Computational Complexity Graph Theory . | How Many Vertices Does a Random Walk Miss in a Network with Moderately Increasing the Number of Vertices? Shuji Kijima, Nobutaka Shimizu, Takeharu Shiraga Symposium on Discrete Algorithms (SODA 2021) DOI: 10.1137/1.9781611976465.8 | arXiv:2008.10837 | Slides Graph Theory Random Walks . | Quasi-majority Functional Voting on Expander Graphs Nobutaka Shimizu, Takeharu Shiraga International Colloquium on Automata, Languages, and Programming (ICALP 2020) DOI: 10.4230/LIPIcs.ICALP.2020.97 | arXiv:2002.07411 Graph Theory Consensus Dynamics Stochastic Processes . | Phase Transitions of Best-of-Two and Best-of-Three on Stochastic Block Models Nobutaka Shimizu, Takeharu Shiraga International Symposium on Distributed Computing (DISC 2019) DOI: 10.4230/LIPIcs.DISC.2019.32 | arXiv:1907.12212 Graph Theory Consensus Dynamics Stochastic Processes . | The Diameter of Dense Random Regular Graphs Nobutaka Shimizu Symposium on Discrete Algorithms (SODA 2018) DOI: 10.1137/1.9781611975031.126 Graph Theory Random Graphs . | Average Shortest Path Length of Graphs of Diameter 3 Nobutaka Shimizu, Ryuhei Mori Symposium on Networks-on-Chip (NOCS 2016) DOI: 10.1109/NOCS.2016.7579335 | arXiv:1606.05119 Graph Theory Network Theory . | . ",
    "url": "/mypapers/#conference-proceedings-peer-reviewed",
    
    "relUrl": "/#conference-proceedings-peer-reviewed"
  },"3": {
    "doc": "Publications",
    "title": "Other Publications",
    "content": ". | 動的グラフ上のランダムウォーク (Random Walks on Dynamic Graphs) 来嶋 秀治, 清水 伸高, 白髪 丈晴 日本応用数理学会 学会誌「応用数理」, 32(1), pp. 5-15, 2022 DOI: 10.11540/bjsiam.32.1_5 Graph Theory Random Walks Survey Paper | . ",
    "url": "/mypapers/#other-publications",
    
    "relUrl": "/#other-publications"
  },"4": {
    "doc": "Planted Clique Conjectures Are Equivalent",
    "title": "Planted Clique Conjectures Are Equivalent",
    "content": "In this note, I will explain my STOC’24 paper “Planed Clique Conjectures Are Equivalent”, a joint work with Shuichi Hirahara. | link to STOC version | link to full version | link to slide | . ",
    "url": "/mypapers/docs/planted_clique/",
    
    "relUrl": "/docs/planted_clique/"
  },"5": {
    "doc": "Planted Clique Conjectures Are Equivalent",
    "title": "Background",
    "content": "In Planted Clique Problem, we are given a random graph obtained by the following procedure: . Sample a graph $G$ from the Erdős-Rényi model $G(n, 1/2)$ with $n$ vertices. Then, choose a set of $k$ vertices $C\\subseteq [n]$ uniformly at random and add edges between all pairs of vertices in $C$, making $C$ a $k$-clique in $G$. The distribution of the resulting graph is denoted as $\\PC(n, k)$. The goal is to find the planted clique $C$ given a graph drawn from $\\PC(n,k)$. The complexity of recovering the planted clique in a graph drawn from $\\PC(n,k)$ crucially depends on the size $k$ of the planted clique. | It is well known that the maximum clique in a random graph $G\\sim G(n,1/2)$ is of size $(2+o(1))\\log_2 n$ with high probability. Thus, if $k\\le 2\\log_2 n$, then we cannot recover $C$. | On the other hand, if $k\\gg 2\\log_2 n$, we can recover $C$ with high probability by the brute-force search over all $k$-cliques in $G$. | . Therefore, the threshold $k=2\\log_2 n$ is the information-theoretic limit for solvability of the planted clique problem. However, the brute-force search for $k\\gg2\\log_2 n$ is not efficient. So the natural question is: . Can we recover the planted clique $C$ given $G\\sim\\PC(n,k)$ when $k\\gg 2\\log_2 n$? . This question was initially studied by Jerrum[1] and Kučera[2]. Jerrum[1] proved that a class of algorithms based on Metropolis process cannot recover the planted clique when $k\\ll \\sqrt{n}$. Kučera[2] showed that if $k\\ge c\\sqrt{n\\log n}$ for a sufficiently large constant $c&gt;0$, then vertices with top-$k$ largest degrees in $G$ form the planted clique $C$ with high probability. In a seminal work, Alon, Krivelevich, and Sudakov[3] presented a polynomial-time algorithm that recovers the planted clique with high probability when $k\\ge c\\sqrt{n}$ for an arbitrary constant $c&gt;0$. Despite a long line of research from 1990s, no polynomial-time algorithm is known for Planted Clique Problem for $k\\ll \\sqrt{n}$. Moreover, several works have shown that Planted Clique Problem with $k\\ll \\sqrt{n}$ is hard against various natural classes of algorithms, including Lovász–Schrijver semidefinite programming hierarchy[4], sum-of-squares hierarchy[5], statistical query algorithms[6], and constant depth circuits[7]. This raises the conjecture asserting the hardness of Planted Clique Problem for $k\\ll \\sqrt{n}$. Conjecture 1(Planted Clique Conjecture) . There exists a constant $\\alpha&gt;0$ such that for $k = n^{1/2-\\alpha}$, no polynomial-time algorithm can recover the planted clique $C$ from $G\\sim\\PC(n,k)$ with probability $2/3$, where the probability is taken over the choice of $G$. Assuming Conjecture 1, we can see that Planted Clique Problem exhibits a computational-statistical gap: The information-theoretical threshold is $k=2\\log_2 n$, whereas the computational threshold is $k=\\sqrt{n}$. This kind of gap appears in a variety of problems in high-dimensional statistical inference. ",
    "url": "/mypapers/docs/planted_clique/#background",
    
    "relUrl": "/docs/planted_clique/#background"
  },"6": {
    "doc": "Planted Clique Conjectures Are Equivalent",
    "title": "Motivation of Planted Clique",
    "content": "Why do we care about the hardness of Planted Clique Problem? For computational complexity theorists, Planted Clique Problem can be seen as a natural average-case problem that is conjectured to be hard. Moreover, this problem can be seen as the average-case variant of the maximum clique problem, which is a well-known NP-hard problem. In the area of high-dimensional statistics, Planted Clique Conjecture serves as a hypothetical hardness assumption for various statistical inference problems, including community detection[8], sparse PCA[9], and approximate Nash Equilibria[10], to name a few. Assuming Planted Clique Conjecture, we can prove computational lower bounds for these problems. Interestingly, based on Planted Clique Conjecture, we can construct a one-way function, a fundamental building block of cryptography [11]. Roughly speaking, a one-way function is a function $f$ that can be easy to compute $f(x)$ given $x$ but hard to invert $x$ for given $f(x)$ for random $x$. For example, consider a function $f(G,C)$ that outputs the graph obtained by making $C$ a clique in $G$, which is easy to compute given $G$ and $C$. If $G$ is drawn from $G(n,1/2)$ and $C$ is a random $k$-vertex set, then distribution of $f(G,C)$ coincides with $\\PC(n,k)$. Thus, assuming Planted Clique Conjecture, it is hard to invert $f(G,C)$ for random $G$ and $C$. A variant of Planted Clique Problem is shown to be useful in the context of secret sharing[12] and public-key cryptography[13]. ",
    "url": "/mypapers/docs/planted_clique/#motivation-of-planted-clique",
    
    "relUrl": "/docs/planted_clique/#motivation-of-planted-clique"
  },"7": {
    "doc": "Planted Clique Conjectures Are Equivalent",
    "title": "Planted Clique Conjectures Are Equivalent",
    "content": "In my STOC’24 paper with Shuichi [14], we show that several variant of Planted Clique Conjectures are equivalent. The variants are as follows: . | Decision version: In the decision version of Planted Clique Problem, our task is to distinguish two distributions: $\\PC(n,k)$ and $G(n,1/2)$. Specifically, we are given a graph $G$ that is drawn from either $\\PC(n,k)$ or $G(n,1/2)$, and we are asked to decide which distribution from which $G$ is drawn. We say that an algorithm $A$ has advantage $\\beta$ if . \\[\\begin{align*} \\left|\\Pr_{G\\sim\\PC(n,k)}[A(G)=1] - \\Pr_{G\\sim G(n,1/2)}[A(G)=1]\\right| \\geq \\beta. \\end{align*}\\] Our goal is to design an algorithm with as high advantage as possible. | Search version: In the search version of Planted Clique Problem, we are given a graph $G$ that is drawn from $\\PC(n,k)$, and our task is to find the planted clique $C$ (this coincides with the definition above). We say that an algorithm $A$ has success probability $\\beta$ if . \\[\\begin{align*} \\Pr_{G\\sim\\PC(n,k)}[A(G)=C] \\geq \\beta, \\end{align*}\\] where $C$ denotes the planted clique in $G$. Conjecture 1 says that any polynomial-time algorithm has success probability at most $2/3$ for $k=n^{1/2-\\alpha}$. | . In view of this, the formal statement of “Planted Clique Conjecture” relies on . | whether we care about the decision version or search version, and | the choice of the parameter $\\beta$ (the success probability or advantage). | . In our paper [14], we show that the choice above (decision or search, and the choice of $\\beta$) does not matter for a wide range of $\\beta$. Roughly speaking, we show that . If one can distinguish $\\PC(n,n^{1/2-\\alpha})$ and $G(n,1/2)$ with advantage $\\Omega(1)$ for some $\\alpha&gt;0$, then one can find the planted clique $C$ from $\\PC(n,n^{1/2-\\alpha’})$ with success probability $1-\\exp(-n^{\\Omega(1)})$ for some $\\alpha’&gt;0$. Below is the precise statement of our result. Theorem 2 (informal) . The following statements are equivalent: . | There exist a constant $\\alpha&gt;0$ and a polynomial-time algorithm $A$ that recovers the planted clique $C$ from $G\\sim\\PC(n,n^{1/2-\\alpha})$ with probability $2/3$. | There exist constants $\\alpha,\\gamma&gt;0$ and a polynomial-time algorithm $A$ that recovers the planted clique $C$ from $G\\sim\\PC(n,n^{1/2-\\alpha})$ with probability $1-\\exp(-n^\\gamma)$. | There exist constants $\\alpha,\\gamma&gt;0$ and a polynomial-time algorithm $A$ that recovers the planted clique $C$ from $G\\sim\\PC(n,n^{1/2-\\alpha})$ with success probability $1/n^\\gamma$. | There exist a constant $\\alpha&gt;0$ and a polynomial-time algorithm $A$ that distinguishes $\\PC(n,n^{1/2-\\alpha})$ from $G(n,1/2)$ with advantage $1/3$. | There exist constants $\\alpha,\\gamma&gt;0$ and a polynomial-time algorithm $A$ that distinguishes $\\PC(n,n^{1/2-\\alpha})$ from $G(n,1/2)$ with advantage $1-\\exp(-n^\\gamma)$. | There exist constants $\\alpha,\\gamma&gt;0$ and a polynomial-time algorithm $A$ that distinguishes $\\widetilde{\\PC}(n,n^{1/2-\\alpha})$ from $G(n,1/2)$ with advantage $k^{2+\\gamma}/n$. | . Here, the distribution $\\widetilde{\\PC}(n,k)$ is called binomial-$k$ model, defined as the distribution of the following random graph: Sample $G\\sim G(n,1/2)$ and let $C\\subseteq [n]$ be a random subset that contains each vertex with probability $k/n$ independently. Then, add edges between all pairs of vertices in $C$, making $C$ a clique in $G$. The first three statements says that the choice of the success probability $\\beta$ does not matter for the search version of Planted Clique Conjecture for any $1/\\poly(n) \\le \\beta \\le 1-\\exp(-\\poly(n))$. Similarly, the last three statements say that the choice of the advantage $\\beta$ does not matter for the decision version of Planted Clique Conjecture as long as $k^{2+\\gamma}/n \\le \\beta \\le 1-\\exp(-\\poly(n)) $. In the binomial-$k$ model, the size of the planted clique is random with mean $k$. But the Chernoff bound yields that the clique size is concentrated around $k$ with high probability. So these two models (binomial-$k$ and fixed-$k$) are essentially equivalent (but I don’t know how to prove that). As an immediate but interesting corollary, we can obtain the following statement: . Corollary 3 (informal) . If there is a polynomial-time algorithm that distinguishes $\\widetilde{\\PC}(n,k)$ and $G(n,1/2)$ with advantage $k^{2+\\gamma}/n$ for some constant $\\gamma&gt;0$, then there is a polynomial-time algorithm that recovers the planted clique for a graph drawn from $\\PC(n,n^{1/2-\\alpha’})$ with advantage $1-\\exp(-n^{\\gamma’})$ for some constants $\\alpha’,\\gamma’&gt;0$. Indeed, by counting the number of edges, we can distinguish $\\widetilde{\\PC}(n,k)$ with $G(n,1/2)$ with advantage $\\Omega(k^/n)$ (see, e.g., Luca’s blog). Therefore, Corollary 3 implies that assuming Planted Clique Conjecture, the edge counting algorithm is almost optimal for the decision version of Planted Clique Problem. Update News: A very recent paper [15] further closed the gap between $k^{2+\\gamma}/n$ and $k^2/n$. Actually, they showed that assuming Conjecture 1, a low-degree algorithm achieves an optimal advantage for the decision version of Planted Clique Problem. ",
    "url": "/mypapers/docs/planted_clique/",
    
    "relUrl": "/docs/planted_clique/"
  },"8": {
    "doc": "Planted Clique Conjectures Are Equivalent",
    "title": "Techniques",
    "content": "The key ingredient in our proof is two kinds of reductions: embedding reduction and shrinking reduction. These reductions are aimed to boost the advantage or success probability of an algorithm. Embedding Reduction . This reduction is introduced in our previous work [16]. The idea is to randomly embed the planted clique $C$ into a larger Erdős–Rényi graph $G(N,1/2)$. Note that the distribution of the resulting graph is identical to $\\PC(N,k)$. If we set $N = n^{1+o(1)}$ and $k = n^{1/2-\\alpha}$, then the size of the planted clique $C$ is $k = n^{1/2-\\alpha} = N^{1/2-\\alpha-o(1)}$. Our strategy is simple: . | Let $A$ be an algorithm that finds the planted clique with success probability $\\gamma$. Let $G\\sim\\PC(n,k)$ be the input. | Obtain $G’$ by the embedding reduction above. | If $A(G’)$ outputs a $k$-clique $C’$, then, we can recover the original clique and output it. | Repeat 2-3 for $\\poly(n)$ times. | . This gives us a polynomial-time algorithm that recovers the planted clique with very high success probability. Shrinking Reduction . This reduction is the new reduction introduced in this paper. The reduction itself is very simple: Given an $M$-vertex graph drawn from $\\PC(M,k)$, choose $m$ distinct vertices randomly and take the subgraph induced by these vertices. Let $S\\subseteq[M]$ be set of the chosen $m$ vertices in this reduction and $C\\subseteq[M]$ Then, the resulting graph has clique of size $\\abs{S\\cap C}$. The distribution of $\\abs{S\\cap C}$ is identical to the hypergeometric distribution with mean $\\frac{m}{M}k$. Actually, this distribution is statistically close to the binomial distribution $\\mathrm{Bin}(m,k/M)$. That is, the resulting graph has a clique of size (statistically close to) $\\mathrm{Bin}(m,k/M)$, meaning that the graph is close to $\\widetilde{\\PC}(n,k)$. If $k=M^{1/2-\\alpha}$ and $m=M^{1-o(1)}$, then the expected size of the clique is $\\frac{m}{M}k=M^{1/2-\\alpha-o(1)}=m^{1/2-\\alpha-o(1)}$. ",
    "url": "/mypapers/docs/planted_clique/#techniques",
    
    "relUrl": "/docs/planted_clique/#techniques"
  },"9": {
    "doc": "Planted Clique Conjectures Are Equivalent",
    "title": "References",
    "content": ". | Mark Jerrum. 1992. Large Cliques Elude the Metropolis Process. Random Structures &amp; Algorithms, 3(4), 347–360. doi: 10.1002/rsa.3240030402. | Luděk Kučera. 1995. Expected Complexity of Graph Partitioning Problems. Discrete Applied Mathematics, 57, 2-3, 193–212. doi: 10.1016/0166-218X(94)00103-K. | Noga Alon, Michael Krivelevich, and Benny Sudakov. 1998. Finding a Large Hidden Clique in a Random Graph. Random Structures &amp; Algorithms, 13(3-4), 457–466. doi: 10.1002/(SICI)1098-2418(199810/12)13:3/4&lt;457::AID-RSA14&gt;3.0.CO;2-W. | Uriel Feige and Robert Krauthgamer. 2003. The Probable Value of the Lovász–Schrijver Relaxations for Maximum Independent Set. SIAM Journal of Computing, 32(2), 345–370. doi: 10.1137/S009753970240118X. | Boaz Barak, Samuel B. Hopkins, Jonathan A. Kelner, Pravesh K. Kothari, Ankur Moitra, and Aaron Potechin. 2019. A Nearly Tight Sum-of-Squares Lower Bound for the Planted Clique roblem. SIAM Journal on Computing, 48(2), 687–735. doi:10.1137/17M1138236. | Vitaly Feldman, Elena Grigorescu, Lev Reyzin, Santosh S. Vempala, and Ying Xiao. 2017. Statistical Algorithms and a Lower Bound for Detecting Planted Cliques. Journal of the ACM, 64(2), 8:1–8:37. doi: 10.1145/3046674. | Benjamin Rossman. 2008. On the constant-depth complexity of k-clique. In Proceedings of the Symposium on Theory of Computing (STOC), 721–730. doi:10.1145/1374376.1374480. | Bruce Hajek, Yihong Wu, and Jiaming Xu. 2015. Computational Lower Bounds for Community Detection on Random Graphs, In Proceedings of Conference on Learning Theory (COLT), PMLR 40:899-928. | Quentin Berthet, Philippe Rigollet. 2013. Complexity Theoretic Lower Bounds for Sparse Principal Component Detection. In Proceedings of Conference on Learning Theory, PMLR 30:1046-1066. | Lorenz Minder and Dan Vilenchik. 2009. Small Clique Detection and Approximate Nash Equilibria. In Proceedings of Approximation, Randomization, and Combinatorial Optimization (APPROX-RANDOM). doi:10.1007/978-3-642-03685-9_50. | Ari Juels and Marcus Peinado. 1997. Hiding cliques for cryptographic security. Designs Codes and Cryptography, 20(11), doi:10.1023/A:1008374125234. | Damiano Abram, Amos Beimel, Yuval Ishai, Eyal Kushilevitz, and Varun Narayanan. 2023. Cryptography from Planted Graphs: Security with Logarithmic-Size Messages. In Proceedings of Theory of Cryptography (TCC), doi:10.1007/978-3-031-48615-9_11. | Benny Applebaum, Boaz Barak, and Avi Wigderson. 2010. Public-Key Cryptography from Different Assumptions. In Proceedings of Symposium on Theory of Computing. doi:10.1145/1806689.1806715. | Shuichi Hirahara and Nobutaka Shimizu. 2024. Planted Clique Conjectures Are Equivalent. In Proceedings of Symposium on Theory of Computing (STOC). doi:10.1145/3618260.3649751. | Ansh Nagda and Prasad Raghavendra. 2025. On optimal distinguishers for Planted Clique. arXiv:2505.01990. | Shuichi Hirahara and Nobutaka Shimizu. 2023. Hardness Self-Amplification: Simplified, Optimized, and Unified. In Proceedings of Symposium on Theory of Computing (STOC). doi:10.1145/3564246.3585189. | . ",
    "url": "/mypapers/docs/planted_clique/#references",
    
    "relUrl": "/docs/planted_clique/#references"
  }
}
